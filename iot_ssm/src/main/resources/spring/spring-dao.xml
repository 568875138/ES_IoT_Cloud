<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
				http://www.springframework.org/schema/context
				http://www.springframework.org/schema/context/spring-context.xsd ">
	<!--配置整合mybatis过程-->
	<!--1.配置数据库相关的参数
		可以采用这种方式${url}得到参数
	-->
	<!--有多个properties文件时，加上ignore-unresolvable=true-->
	<context:property-placeholder location="classpath:jdbc.properties" ignore-unresolvable="true"/>

	<!--2.数据库的连接池-->
	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<!--配置链接池属性-->
		<property name="driverClass" value="${driver}"/>
		<property name="jdbcUrl" value="${url}"/>
		<property name="user" value="${userna}"/>
		<property name="password" value="${password}"/>

		<!--配置c3p0的私有属性-->
		<property name="maxPoolSize" value="5000"/><!--默认15-->
		<property name="minPoolSize" value="10"/><!--默认3-->
		
		<!--<property name="unreturnedConnectionTimeout" value="25"/>-->
		<!--<property name="maxIdleTimeExcessConnections" value="20"/>-->
		<!--<property name="maxConnectionAge" value="20"/>-->
		
		<!--关闭后不自动commit-->
		<property name="autoCommitOnClose" value="false"/>
		<property name="checkoutTimeout" value="1000"/>
		<!--重试次数-->
		<property name="acquireRetryAttempts" value="2"/>
 	</bean>

	<!--约定大于配置-->
	<!--3：配置SqlSessionFactory对象-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!--注入数据库链接池-->
		<property name="dataSource" ref="dataSource"/>
		<!--配置mybatis全局配置文件-->
		<property name="configLocation" value="classpath:mybatis-config.xml"/>
		<!--扫描entity,使用别名-->
		<property name="typeAliasesPackage" value="com.wust.iot.model"/>
		<!--扫描sql配置文件：mapper需要的xml文件-->
		<property name="mapperLocations" value="classpath:mapper/*.xml"/>
	</bean>

	<!--4:配置扫描dao接口的包,动态实现Dao接口，注入到Spring容器中-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--注入sqlSessionFactory-->
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
		<!--给出扫描DAO接口包 -->
		<property name="basePackage" value="com.wust.iot.dao"/>
	</bean>

	<!--redisDao-->
	<!--<bean id="redisDao" class="org.seckill.dao.cache.RedisDao">
		<constructor-arg index="0" value="localhost"/>
		<constructor-arg index="1" value="6379"/>
	</bean>-->

</beans>