<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
		xmlns="http://www.springframework.org/schema/security"
		xmlns:beans="http://www.springframework.org/schema/beans"
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security.xsd">

	<context:annotation-config/>

	<http security="none" pattern="/"/>
	<http security="none" pattern="/login/**"/>
	<http security="none" pattern="/static/**"/>
	<http security="none" pattern="/api/**"/>
	<!--<http security="none" pattern="/api/user/doLogin"/>-->
	<!--<http security="none" pattern="/api/user/doRegister"/>-->
	<http security="none" pattern="/sdk/**"/>
	<http auto-config="true" use-expressions="true">
		<!--需要user or admin身份-->
		<!--<intercept-url pattern="/api/user/**" access="hasRole('ROLE_USER')"/>-->
		<!--<intercept-url pattern="/admin/*" access="hasRole('ROLE_ADMIN')"/>-->
		<!--<intercept-url pattern="/project/**" access="hasRole('ROLE_USER')"/>-->


		<!--TODO-->
		<form-login login-page="/login"
					username-parameter="username"
					password-parameter="password"
					authentication-failure-url="/login/error" />

		<logout logout-url="/logout" logout-success-url="/page/login?logout=1"/>

		<!--<access-denied-handler error-page="/page/deny"/>-->

		<csrf disabled="true"/>
		<remember-me user-service-ref="userDetailsService" key="uniqueAndSecret" token-validity-seconds="2592000"/>

		<!--登录前执行token验证  (移动端验证token)  暂时不需要-->
		<!--<custom-filter ref="tokenAuthenticationFilter" before="FORM_LOGIN_FILTER"/>-->
	</http>


	<!--验证配置，认证管理器，实现用户认证的入口，主要实现UserDetailsService接口即可 -->
	<authentication-manager alias="authenticationManager">
		<authentication-provider user-service-ref="userDetailsService">
			<!--密码加密-->
			<!--<password-encoder ref="myPasswordEncoder"/>-->
			<!--<password-encoder hash="md5" />-->
			<password-encoder ref="passwordEncoder"/>
		</authentication-provider>
	</authentication-manager>



	<!--<beans:bean id="tokenAuthenticationFilter" class="com.wust.iot.filter.TokenAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager"/>
	</beans:bean>-->
	<!--<beans:bean id="webAuthenticationFilter" class="com.wust.iot.filter.WebAuthenticationFilter">
	</beans:bean>-->
	<!--TODO-->
	<!--在这个类中，你就可以从数据库中读入用户的密码，角色信息，是否锁定，账号是否过期等 -->
	<beans:bean id="userDetailsService" class="com.wust.iot.service.impl.UserDetailsServiceImpl"/>
	<!-- 密码加密 -->
	<beans:bean id="myPasswordEncoder" class="com.wust.iot.utils.Md5Util"/>
	<!-- 对密码进行MD5编码 -->
	<beans:bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>

</beans:beans>